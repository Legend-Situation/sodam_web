import * as S from "./style";
import { useNavigate } from "react-router-dom";
import Arrow from "@/assets/arrow.svg";
import Footer from "@/components/Footer";

const Notifications = () => {
  const navigate = useNavigate();

  // ÏûÑÏãú ÏïåÎ¶º Îç∞Ïù¥ÌÑ∞
  const notifications = [
    {
      id: 1,
      type: "question",
      title: "ÏÉàÎ°úÏö¥ ÏßàÎ¨∏Ïù¥ ÎèÑÏ∞©ÌñàÏñ¥Ïöî!",
      message: "Ïò§ÎäòÏùò ÏßàÎ¨∏Ïóê ÎãµÎ≥ÄÌï¥Î≥¥ÏÑ∏Ïöî",
      time: "Î∞©Í∏à Ï†Ñ",
      isRead: false,
    },
    {
      id: 2,
      type: "answer",
      title: "ÍπÄÏÇ¨Ïû•ÎãòÏù¥ ÎãµÎ≥ÄÌñàÏñ¥Ïöî",
      message: "ÏßàÎ¨∏ #12Ïóê ÏÉàÎ°úÏö¥ ÎãµÎ≥ÄÏù¥ ÏûàÏäµÎãàÎã§",
      time: "1ÏãúÍ∞Ñ Ï†Ñ",
      isRead: false,
    },
    {
      id: 3,
      type: "level",
      title: "ÏàòÎã¨Ïù¥ Î†àÎ≤®ÏóÖÌñàÏñ¥Ïöî! üéâ",
      message: "Lv.3 Ïñ¥Î¶∞ ÏàòÎã¨Î°ú ÏÑ±Ïû•ÌñàÏäµÎãàÎã§",
      time: "2ÏãúÍ∞Ñ Ï†Ñ",
      isRead: true,
    },
    {
      id: 4,
      type: "shop",
      title: "ÏÉàÎ°úÏö¥ ÏïÑÏù¥ÌÖúÏù¥ Ï∂úÏãúÎêòÏóàÏñ¥Ïöî",
      message: "ÏÉùÏùº ÌïúÏ†ïÌåê ÏïÑÏù¥ÌÖúÏùÑ ÌôïÏù∏Ìï¥Î≥¥ÏÑ∏Ïöî",
      time: "1Ïùº Ï†Ñ",
      isRead: true,
    },
  ];

  const getNotificationIcon = (type: string) => {
    switch (type) {
      case "question": return "‚ùì";
      case "answer": return "üí¨";
      case "level": return "üåü";
      case "shop": return "üõçÔ∏è";
      default: return "üì¢";
    }
  };

  const GoBack = () => navigate("/home");

  return (
    <S.Layout>
      <S.Header>
        <img src={Arrow} onClick={GoBack} style={{ cursor: "pointer" }} />
        <S.Title>ÏïåÎ¶º</S.Title>
        <div style={{ width: 24 }} /> {/* Í∑†ÌòïÏùÑ ÏúÑÌïú Îπà Í≥µÍ∞Ñ */}
      </S.Header>

      <S.Content>
        {notifications.map((notification) => (
          <S.NotificationCard key={notification.id} isRead={notification.isRead}>
            <S.NotificationIcon>
              {getNotificationIcon(notification.type)}
            </S.NotificationIcon>
            <S.NotificationContent>
              <S.NotificationTitle isRead={notification.isRead}>
                {notification.title}
              </S.NotificationTitle>
              <S.NotificationMessage>
                {notification.message}
              </S.NotificationMessage>
              <S.NotificationTime>
                {notification.time}
              </S.NotificationTime>
            </S.NotificationContent>
            {!notification.isRead && <S.UnreadDot />}
          </S.NotificationCard>
        ))}
      </S.Content>

      <Footer />
    </S.Layout>
  );
};

export default Notifications;